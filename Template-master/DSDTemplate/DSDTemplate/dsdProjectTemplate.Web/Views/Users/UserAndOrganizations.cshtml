
@using Kendo.Mvc.UI
@using dsdProjectTemplate.Utility;
@{
    Layout = "~/Views/Shared/_PopupWindowLayout.cshtml";
}
<style>
    .k-button.k-button-icontext .k-icon {
        vertical-align: middle !important;
        margin: 0 3px 0 0 !important;
    }

    .k-edit-form-container {
        width: auto;
    }
</style>
<section class="content">
    <div class="card">

        <div class="card-body">

            <div class="row">
                @(Html.Kendo().Grid<dsdProjectTemplate.ViewModel.User.UserAndOrganizationViewModel>
    ()
    .Name("grid")
   .ToolBar(toolbar =>
     {
         if (UserSession.Current.CanAddRecords)
         {
             toolbar.Create();
         }
     })
    .Editable(editable => editable.Mode(GridEditMode.InLine).Window(w => w.Title("Sub Menu").Width(500))).Events(e => e.Edit("onPopOpen"))
    .Scrollable()
    .Sortable()
    .Pageable()
    .Filterable(ftb => ftb
    .Mode(GridFilterMode.Row)
    .Extra(false)
    )
    .HtmlAttributes(new { style = "height:550px;" })
    .Columns(columns =>
    {
        columns.Bound(p => p.UserId).Width(200).Hidden(true);
        columns.ForeignKey(p => p.OrganizationId, (System.Collections.IEnumerable)ViewBag.OrganizationsList, "Value", "Text").Title("Organization").Width(150);
        columns.ForeignKey(p => p.RoleId, (System.Collections.IEnumerable)ViewBag.Roles, "Value", "Text").Title("Role").Width(100).Filterable(false);
        columns.ForeignKey(p => p.RegistrationRequestTypeId, (System.Collections.IEnumerable)ViewBag.RequestType, "Value", "Text").Title("RequestType").Width(100).Filterable(false);
        columns.Bound(p => p.IsActive).ClientTemplate(
        "# if (IsActive) { #" +
        "<span class='badge bg-success'>YES</span>" +
        "# } else { #" +
        "<span class='badge bg-danger'>NO</span> " + "#}#").Width(150).Filterable(true);
        columns.Command(command => { command.Edit().Text((UserSession.Current.CanEditRecords == true ? "Edit" : "View")); }).Width(90);

    })
    .DataSource(dataSource => dataSource
    .Ajax()
    .PageSize(20)
    .Events(events =>
    {
        //events.Error("error_handler");
        events.RequestEnd("onRequestEnd");
    })
    .Model(model => model.Id(p => p.Id))
    .Create(update => update.Action("SaveUserAndOrganization", "Users"))
    .Update(update => update.Action("SaveUserAndOrganization", "Users"))
    .Read(read => read.Action("BindUserAndOrganizations", "Users").Data("HeaderSearchModel"))
    ))
            </div>
        </div>
    </div>
</section>
<input type="hidden" value="@ViewBag.UserId" id="hdnId" />
<!-- /.content-header -->
<script type="text/javascript">
    var OrganizationsList =@Html.Raw(Json.Encode(ViewBag.OrganizationsList));
   //var RolesList =@Html.Raw(Json.Encode(ViewBag.Roles));
  //  var RequestType =@Html.Raw(Json.Encode(ViewBag.RequestType));
    function HeaderSearchModel() {
        return {
            UserId: $('#hdnId').val()
        }
    }
    function BindGrid(e) {

        var grid = $("#grid").data("kendoGrid");
        grid.dataSource.read();

    }
    function onRequestEnd(e, status) {
        if (e.response.Errors) {
            var grid = $("#grid").data("kendoGrid");
            grid.cancelChanges();
            var message = "";
            $.each(e.response.Errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            toastr.error(message, 'Warning', { timeOut: 1500 });
        }
        if (e.type == "create" && !e.response.Errors) {
            toastr.success(_recordSaved, '', { timeOut: 1000 });
        }
        if (e.type == "update" && !e.response.Errors) {
            toastr.success(_recordUpdated, '', { timeOut: 1000 });
        }
    }
    function onPopOpen(e) {
        //alert('ok');
        //$("#BeginDate").kendoDatePicker();
        //$("#EndDate").kendoDatePicker();

        if (e.model.id == 0) {
            // $(".k-window-title").html('Add Menu Header Configuration');
            $(".k-grid-update").html('<span class="k-icon k-i-check"></span>Save');
        }
        else {
           if ('@UserSession.Current.CanEditRecords' == "False") {
                $(".k-edit-form-container .k-edit-buttons").hide();
                $(".k-grid-update").hide();
            }
            else {
                $(".k-edit-form-container .k-edit-buttons").show();

                //$(".k-window-title").html("View Detail");
            }

        }

        $("#UserId").val($('#hdnId').val());
        $("#UserId").trigger("change");
        $("#OrganizationId").kendoDropDownList({
            //optionLabel: "Select Project Task ID",
            dataTextField: "Text",
            dataValueField: "Value",
            dataSource: OrganizationsList
        }).data("kendoDropDownList");
        var ProjectTaskID_Dropdownlist = $("#OrganizationId").data("kendoDropDownList");
        getRoles();
        getRegistrationRequestType();
        $("#OrganizationId").change(function (e) {
            getRoles();
            getRegistrationRequestType();
        });


        function getRoles() {
            $.ajax({
                url: '/Main/GetRolesList',
                method: 'get',
                async: false,
                data: { 'orgId': $("#OrganizationId").val() },
                success: function (res) {
                    $("#RoleId").kendoDropDownList({
                        optionLabel: "Select Role",
                        dataTextField: "Text",
                        dataValueField: "Value",
                        dataSource: res
                    }).data("kendoDropDownList");
                    $("#RoleId").data("kendoDropDownList");

                },
                erorr: function (err) {
                    console.log(err);
                }
            });
        }
        function getRegistrationRequestType() {
            $.ajax({
                url: '/Main/GetRegistrationRequestTypeList',
                method: 'get',
                async: false,
                data: { 'orgId': $("#OrganizationId").val() },
                success: function (res) {
                    $("#RegistrationRequestTypeId").kendoDropDownList({
                        optionLabel: "Select Registration Request",
                        dataTextField: "Text",
                        dataValueField: "Value",
                        dataSource: res
                    }).data("kendoDropDownList");
                    $("#RegistrationRequestTypeId").data("kendoDropDownList");

                },
                erorr: function (err) {
                    console.log(err);
                }
            });
        }
    }

</script>
