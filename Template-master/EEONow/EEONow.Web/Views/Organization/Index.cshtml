@using Kendo.Mvc.UI
@using EEONow.Utilities;
@{
    ViewBag.Title = "Vacancy Positions Color List";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    var LoginInfo = AppUtility.DecryptCookie();
}
<link href="~/Content/kendo/kendo.common.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/kendo/kendo.mobile.all.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/kendo/kendo.default.min.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/kendo/jquery.min.js"></script>
<script src="~/Scripts/kendo/jszip.min.js"></script>
<script src="~/Scripts/kendo/kendo.all.min.js"></script>
<script src="~/Scripts/kendo/kendo.aspnetmvc.min.js"></script>
<script src="@Url.Content("~/Scripts/kendo.modernizr.custom.js")"></script>
@*<link href="~/Content/kendo/kendo.material.min.css" rel="stylesheet" />*@
<style>
    .k-button.k-button-icontext .k-icon {
        vertical-align: middle !important;
        margin: 0 3px 0 0 !important;
    }

    .k-edit-form-container {
        width: auto;
    }
</style>
<h2 class="main_title_row">Organization List</h2>
<input type="hidden" id="HfUserRoleInfo" value="@LoginInfo.Roles" />
@(Html.Kendo().Grid<EEONow.Models.OrganizationModel>
    ()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.Name).Width(250).Filterable(filterable => filterable.Cell(e => e.Operator("contains").SuggestionOperator(FilterType.Contains).ShowOperators(false)));
        //columns.Bound(p => p.Description).Filterable(false);
        //columns.Bound(p => p.VacanciesDisplayColorCode);
        columns.Bound(p => p.Address).Width(150).Filterable(false);
        columns.ForeignKey(p => p.StateId, (System.Collections.IEnumerable)ViewBag.StateList, "Value", "Text").Title("State").Width(100).Filterable(false);
        columns.ForeignKey(p => p.DefaultStateId, (System.Collections.IEnumerable)ViewBag.DefaultStateList, "Value", "Text").Title("Default ALM State").Width(100).Filterable(false);
        columns.ForeignKey(p => p.DefaultEEOOccupationalCodeID, (System.Collections.IEnumerable)ViewBag.USCensusOccupationsList, "Value", "Text").Title("Default ALM Occupational Code").Width(220).Filterable(false);
        //columns.ForeignKey(p => p.ParentOrganizationId, (System.Collections.IEnumerable)ViewBag.ParentOrganizationList, "Value", "Text").Title("Parent Organization").Width(150).Filterable(false);
        columns.Bound(p => p.Active).Width(120).Filterable(false);
        columns.Bound(p => p.EnableTwoFactorAuthentication).Width(120).Filterable(false);

        columns.Command(command => { command.Edit().Text((LoginInfo.IsEdit == true ? "Edit" : "View")).HtmlAttributes(new { tabindex = "9" }); }).Width(100);

    })
    .ToolBar(toolbar =>
    {
        toolbar.Create();
    })
    .Editable(editable => editable.Mode(GridEditMode.PopUp).Window(w => w.Title("Edit Organization").Width(700))).Events(e => e.Edit("onPopOpen"))
    .Pageable()
    .Navigatable(e => e.Enabled(true))
    .Selectable(e => e.Enabled(true))
    .Sortable()
    .Scrollable()
    .Filterable(ftb => ftb
    .Mode(GridFilterMode.Row)
    .Extra(false)
    )
    .HtmlAttributes(new { style = "height:550px;" })
    .DataSource(dataSource => dataSource
    .Ajax()
    .PageSize(20)
    .Events(events =>
    {


        events.RequestStart("onRequestEnd");
        //events.RequestStart("onRequestStart");
        // events.Push("onRequestStart");
    })
    .Model(model => model.Id(p => p.OrganizationId))
    .Create(update => update.Action("CreateOrganization", "Organization"))
    .Read(read => read.Action("BindOrganizationModel", "Organization"))
    .Update(update => update.Action("UpdateOrganization", "Organization"))
    //.Destroy(update => update.Action("Destroy", "Home"))
    )
)

@section css{
    <link href="~/Content/Custom/login.css" rel="stylesheet" />
    <link href="~/Content/alertifyjs/css/alertify.rtl.css" rel="stylesheet" />
}
@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Content/alertifyjs/alertify.js"></script>
    <script src="~/Content/alertifyjs/alertify.min.js"></script>
    <script type="text/javascript">
            //function error_handler(e) {
            //    if (e.errors) {

            //        var grid = $("#grid").data("kendoGrid");
            //        grid.cancelChanges();

            //        var message = "Errors:\n";
            //        $.each(e.errors, function (key, value) {
            //            if ('errors' in value) {
            //                $.each(value.errors, function () {
            //                    message += this + "\n";
            //                });
            //            }
            //        });
            //        alert(message);
            //    }
            //}

            $(document).ready(function () {
                @*if ('@LoginInfo.Roles' != "DefinedSoftwareAdministrator") {
                    $(".k-filter-row").hide()
                    $(".k-filter-row").html('');
                    $("#grid .k-grid-toolbar").hide();
                    $("#grid .k-grid-toolbar").html('');
                }
                console.log(1432432)*@
            });
            function onRequestEnd(e, status) {
                if (e.errors) {
                    var grid = $("#grid").data("kendoGrid");
                    grid.cancelChanges();
                    var message = "";
                    $.each(e.errors, function (key, value) {
                        if ('errors' in value) {
                            $.each(value.errors, function () {
                                message += this + "\n";
                            });
                        }
                    });
                    alertify.error(message);
                }
                //Check request type
                if (e.type == "create" && !e.errors) {
                    alertify.success("Create record is successfull");
                }
                if (e.type == "update" && !e.errors) {
                    alertify.success("Update record is successfull");
                }
            }

            function onPopOpen(e) {

                e.container.data('kendoWindow').bind('activate', function (e) {
                    $('#OrgCode').focus();
                    //$('span.k-widget k-dropdown k-header').attr('tabindex', 5);
                    $(":input").each(function (i) { $(this).attr('tabindex', i + 1); });

                });

                if (e.model.id == 0) {

                    $(".k-window-title").html('Add Organization');
                    $(".k-grid-update").html('<span class="k-icon k-i-check"></span>Save');
                }else
                {
                 if ('@LoginInfo.IsEdit.ToString()' == "True")
                 {
                     $(".k-edit-form-container .k-edit-buttons").show();
                 }
                 else {
                     $(".k-edit-form-container .k-edit-buttons").hide();
                     $(".k-edit-form-container .k-edit-buttons").html(''); $(".k-window-title").html("View Detail");
                 }
                }
            }
    </script>

}
