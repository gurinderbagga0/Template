@using Kendo.Mvc.UI
@using EEONow.Utilities;
@{
    ViewBag.Title = "Role Assignment";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    var LoginInfo = AppUtility.DecryptCookie();
}
<link href="~/Content/kendo/kendo.common.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/kendo/kendo.mobile.all.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/kendo/kendo.default.min.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/kendo/jquery.min.js"></script>
<script src="~/Scripts/kendo/jszip.min.js"></script>
<script src="~/Scripts/kendo/kendo.all.min.js"></script>
<script src="~/Scripts/kendo/kendo.aspnetmvc.min.js"></script>
<script src="@Url.Content("~/Scripts/kendo.modernizr.custom.js")"></script>
@*<link href="~/Content/kendo/kendo.material.min.css" rel="stylesheet" />*@
<style>
    .k-button.k-button-icontext .k-icon {
        vertical-align: middle !important;
        margin: 0 3px 0 0 !important;
    }

    .k-edit-form-container {
        width: auto;
    }
    /* The container */
    #chkcontainer {
        display: inline-block;
        position: relative;
        padding-left: 30px;
        font-weight: 500;
        line-height: 20px;
        margin-bottom: 0px;
        cursor: pointer;
        font-size: 14px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        margin-top: -4px;
    }

        /* Hide the browser's default checkbox */
        #chkcontainer input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
        }

    /* Create a custom checkbox */
    .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 20px;
        width: 20px;
        background-color: #fff;
        border: 1px solid #d5d5d5;
    }

    /* On mouse-over, add a grey background color */
    #chkcontainer:hover input ~ .checkmark {
        background-color: #fff;
    }

    /* When the checkbox is checked, add a blue background */
    #chkcontainer input:checked ~ .checkmark {
        background-color: #2196F3;
    }

    /* Create the checkmark/indicator (hidden when not checked) */
    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    /* Show the checkmark when checked */
    #chkcontainer input:checked ~ .checkmark:after {
        display: block;
    }

    /* Style the checkmark/indicator */
    #chkcontainer .checkmark:after {
        left: 8px;
        top: 4px;
        width: 5px;
        height: 10px;
        border: solid white;
        border-width: 0 2px 2px 0;
        -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
        transform: rotate(45deg);
    }
</style>
<h2 class="main_title_row">Manage Users</h2>

@(Html.Kendo().Grid<EEONow.Models.ManageUserRoleModel>
        ()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(p => p.FirstName).Width(180).Filterable(filterable => filterable.Cell(e => e.Operator("contains").SuggestionOperator(FilterType.Contains).ShowOperators(false)));
            columns.Bound(p => p.LastName).Width(180).Filterable(filterable => filterable.Cell(e => e.Operator("contains").SuggestionOperator(FilterType.Contains).ShowOperators(false)));
            columns.Bound(p => p.Email).Width(180).Filterable(filterable => filterable.Cell(e => e.Operator("contains").SuggestionOperator(FilterType.Contains).ShowOperators(false)));//.Width(180);         
            columns.ForeignKey(p => p.OrganizationId, (System.Collections.IEnumerable)ViewBag.OrganisationList, "Value", "Text").Width(180).Title("Organization").Filterable(filterable => filterable.Multi(true).Cell(e => e.ShowOperators(false)));
            columns.ForeignKey(p => p.RoleId, (System.Collections.IEnumerable)ViewBag.RoleList, "Value", "Text").Title("Role").Width(180).Filterable(filterable => filterable.Multi(true).Cell(e => e.ShowOperators(false)));
            columns.Bound(p => p.IsActive).Title("Active").Filterable(filter => filter.Messages(message => message.IsFalse("").IsTrue("Active"))).Width(150);
            columns.Bound(p => p.LastLoginDate).Width(180).Filterable(false);
            columns.Bound(p => p.DaysSinceLastLogin).Width(180).Filterable(false);
            columns.Command(command => { command.Edit().Text((LoginInfo.IsEdit==true?"Edit":"View")); }).Width(90);
            columns.Command(command => command.Custom("Re-Send Email").Text("").Click("ReSendEmail")).Width(150);
        })
        .ToolBar(toolbar => {
            toolbar.Create();
            toolbar.Excel().Text("Export records");
        })
        .Editable(editable => editable.Mode(GridEditMode.PopUp).Window(w => w.Title("Edit User").Width(500))).Events(e => e.Edit("onPopOpen"))
        .Pageable()
        .Excel(e=>e.AllPages(true))
        .Sortable()
        .Scrollable()
        .Filterable(ftb => ftb
    .Mode(GridFilterMode.Row)
    .Extra(false)
    )
        .HtmlAttributes(new { style = "height:550px;" })
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Events(events =>
        {
            //events.Error("error_handler");
            events.RequestEnd("onRequestEnd");
        })
        .Model(model =>
        {
            model.Id(p => p.UserId);
            //model.Field(p => p.UserName).Editable(false);
            //model.Field(p => p.OrganizationName).Editable(false);
            //model.Field(p => p.EmailAddress).Editable(false);
        }
    )
    .Create(update => update.Action("CreateManageUserRole", "RoleAssignment"))
    .Read(read => read.Action("BindManageUserRoleModel", "RoleAssignment"))
    .Update(update => update.Action("UpdateManageUserRole", "RoleAssignment"))
    //.Destroy(update => update.Action("Destroy", "Home"))
    )
)

@section css{
    <link href="~/Content/Custom/login.css" rel="stylesheet" />
    <link href="~/Content/alertifyjs/css/alertify.rtl.css" rel="stylesheet" />
}
@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Content/alertifyjs/alertify.js"></script>
    <script src="~/Content/alertifyjs/alertify.min.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {

            $(".k-operator-hidden").find("input[type=radio]").last().hide();
            $(".k-operator-hidden").find("input[type=radio]").first().attr("id", "chkActiveUser");
            $(".k-operator-hidden").find("input[type=radio]").first().attr("data-checkbox", "true");
            $("<span class='checkmark'></span>").insertAfter($(".k-operator-hidden").find("input[type=radio]").first());
            $(".k-operator-hidden").find("input[type=radio]").first().parents("label").attr("id", "chkcontainer");
            $(".k-grid").data("kendoGrid").dataSource.filter({ field: "IsActive", operator: "eq", value: true });    

            $(".k-operator-hidden").find("input[type=radio]").first().attr("type", "checkbox");            
            $(".k-operator-hidden").find("input[type=radio]").last().attr("type", "checkbox");

            $("input[id=chkActiveUser]").click(function () {

                if ($(this).attr("data-checkbox") == "true") {
                    $(".k-grid").data("kendoGrid").dataSource.filter({});
                    $(this).attr("data-checkbox", "false")
                    $(this).removeAttr("checked");
                } else {
                    $(this).attr("data-checkbox", "true")
                }               
            });
        });
        //function error_handler(e) {
        //    if (e.errors) {

        //        var grid = $("#grid").data("kendoGrid");
        //        grid.cancelChanges();

        //        var message = "Errors:\n";
        //        $.each(e.errors, function (key, value) {
        //            if ('errors' in value) {
        //                $.each(value.errors, function () {
        //                    message += this + "\n";
        //                });
        //            }
        //        });
        //        alert(message);
        //    }
        //}
        function ReSendEmail(e) {
            e.preventDefault();
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
             
            console.log(dataItem.Email);
             
            $.ajax({
                url: '/RoleAssignment/ReSendEmail',
                method: 'get',
                async: false,
                data: {
                    'Email': dataItem.Email 
                },
                success: function (res) {
                    alertify.success("Password email sent to user successfully");
                },
                erorr: function (err) {
                    console.log(err);
                }
            });
        }
        function onRequestEnd(e, status) {

            if (e.response.Errors) {
                var grid = $("#grid").data("kendoGrid");
                grid.cancelChanges();
                var message = "";
                $.each(e.response.Errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alertify.error(message);
            }
            //Check request type
            if (e.type == "create" && !e.response.Errors) {
                alertify.success("Create record is successfull");
            }
            if (e.type == "update" && !e.response.Errors) {
                alertify.success("Update record is successfull");
            }
        }

        function onPopOpen(e) {

            if (e.model.id == 0) {
                $(".k-window-title").html('Add User');
                $(".k-grid-update").html('<span class="k-icon k-i-check"></span>Save');
            }else
            {
             if ('@LoginInfo.IsEdit.ToString()' == "True")
             {
                 $(".k-edit-form-container .k-edit-buttons").show();
             }
             else {
                 $(".k-edit-form-container .k-edit-buttons").hide();
                 $(".k-edit-form-container .k-edit-buttons").html(''); $(".k-window-title").html("View Detail");
             }
            }

            $("#LastLoginDate").parent().prev().hide();
            $("#LastLoginDate").parent().hide();

            $("#DaysSinceLastLogin").parent().prev().hide();
            $("#DaysSinceLastLogin").parent().hide();
            $('[name="UserName"]').attr("readonly", true);
            $('[name="EmailAddress"]').attr("readonly", true);
            $('.k-textbox').attr("style", "width:97%");
            $('.k-dropdown').attr("style", "width:97%");
            console.log($("#OrganizationId").val());
            $.ajax({
                url: '/MenuHeader/GetRolesList',
                method: 'get',
                async: false,
                data: { 'organization': $("#OrganizationId").val() },
                success: function (res) {
                    $("#RoleId").kendoDropDownList({
                        optionLabel: "Select Role",
                        dataTextField: "RoleName",
                        dataValueField: "RoleId",
                        dataSource: res
                    }).data("kendoDropDownList");
                    var ProjectTaskID_Dropdownlist = $("#RoleId").data("kendoDropDownList");
                  //  ProjectTaskID_Dropdownlist.select(0);
                  //  ProjectTaskID_Dropdownlist.trigger("change");
                },
                erorr: function (err) {
                    console.log(err);
                }
            });


            $("#OrganizationId").change(function (e) {
                $.ajax({
                    url: '/MenuHeader/GetRolesList',
                    method: 'get',
                    async: false,
                    data: { 'organization': $("#OrganizationId").val() },
                    success: function (res) {
                        $("#RoleId").kendoDropDownList({
                            optionLabel: "Select Role",
                            dataTextField: "RoleName",
                            dataValueField: "RoleId",
                            dataSource: res
                        }).data("kendoDropDownList");
                        var ProjectTaskID_Dropdownlist = $("#RoleId").data("kendoDropDownList");
                        //ProjectTaskID_Dropdownlist.select(0);
                      //  ProjectTaskID_Dropdownlist.trigger("change");
                    },
                    erorr: function (err) {
                        console.log(err);
                    }
                });
            });
        }

    </script>

}
