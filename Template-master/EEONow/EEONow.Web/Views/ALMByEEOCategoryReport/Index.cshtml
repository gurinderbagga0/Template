@model EEONow.Models.DefaultALMValue
@using EEONow.Utilities;
@{
    ViewBag.Title = "ALM By EEO Category Report";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    var LoginInfo = AppUtility.DecryptCookie();
}

<link href="~/Content/kendo/kendo.common.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/kendo/kendo.mobile.all.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/kendo/kendo.default.min.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/kendo/jquery.min.js"></script>
<script src="~/Scripts/kendo/jszip.min.js"></script>
<script src="~/Scripts/kendo/kendo.all.min.js"></script>
<script src="~/Scripts/kendo/kendo.aspnetmvc.min.js"></script>
<script src="@Url.Content("~/Scripts/kendo.modernizr.custom.js")"></script>
<script src="~/Scripts/bootstrap-multiselect.js"></script>
<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
<link href="~/Content/Reports.css" rel="stylesheet" />
<style>
    #RenderReport {
        min-width: 1500px;
    }

    .AVExport {
        margin-right: -90px;
    }

    .k-widget.k-multiselect.k-multiselect-clearable {
        max-height: 57px;
        overflow-y: scroll;
    }



    .k-widget.k-dropdowntree.k-dropdowntree-clearable {
        max-height: 57px;
        overflow-y: scroll;
    }

    span.k-icon.k-clear-value.k-i-close {
        display: none !important;
    }

    .k-multiselect-wrap.k-floatwrap.k-state-hover {
        /*color: #2e2e2e;*/
        background-color: transparent !important;
        border-color: transparent !important;
    }
    .k-checkbox:indeterminate + .k-checkbox-label:after { 
        left: 7px;
        top: 7px; 
        width: 10px;
        height: 10px; 
    }

    .render-outer {
        overflow-y: hidden;
    }


</style>
<input type="hidden" id="HfUserRoleInfo" value="@LoginInfo.Roles" />
<h2 class="main_title_row">Search By:</h2>
<div id="SearchPannel">
    <div class="row">
        <div class="col-md-3">
            <div class="row">
                <div class="col-lg-12">US Census Data Version :</div>
                <div class="col-lg-12">
                    @(Html.Kendo().DropDownList()
              .Name("uscensusdataversion")
              .HtmlAttributes(new { style = "width:100%" })
              .DataTextField("USCensusDataVersionName")
              .DataValueField("USCensusDataVersionId")
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetUSCensusDataVersionDropDown", "ALMByEEOCategoryReport");
                  });
              })
                    )
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="row">
                <div class="col-lg-12">State :</div>
                <div class="col-lg-12">
                    @(Html.Kendo().DropDownList()
              .Name("state")
              .OptionLabel("--Select All--")
              .HtmlAttributes(new { style = "width:100%" })
              .DataTextField("StateName")
              .DataValueField("StateId")
              .Value(Model.DefaultALMState.ToString())
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetStateDropDown", "ALMByEEOCategoryReport");
                  });
              }).Events(e =>
              {
                  e.Change("filterpumacodesViaState");
              })
                    )
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="row">
                <div class="col-lg-12"> US Census Occupations :</div>
                <div class="col-lg-12">
                    @(Html.Kendo().DropDownList()
              .Name("uscensusoccupations")
              //.OptionLabel("--Select All--")
              .HtmlAttributes(new { style = "width:100%" })
              .DataTextField("USCensusOccupationsName")
              .DataValueField("USCensusOccupationsId")
              .Value(Model.DefaultALMOccupationalCode.ToString())
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetUSCensusOccupationsDropDown", "ALMByEEOCategoryReport");
                  });
              })
                    )
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="row">
                <div class="col-lg-12">US Census Geography Types :</div>
                <div class="col-lg-12">
                    @(Html.Kendo().DropDownList()
              .Name("uscensusgeographytypes")
              // .OptionLabel("--Select All--")
              .HtmlAttributes(new { style = "width:100%" })
              .DataTextField("USCensusGeographyTypesName")
              .DataValueField("USCensusGeographyTypesId")
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetUSCensusGeographyTypesDropDown", "ALMByEEOCategoryReport");
                  });
              }).Events(e =>
              {
                  e.Change("filterpumacodes");
              })
                    )
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="row">
                <div class="col-lg-12">Employment Status :</div>
                <div class="col-lg-12">
                    @*@(Html.Kendo().MultiSelect()
                    .Name("employmentstatus")
                    .AutoClose(false)
                    .AutoBind(false)
                    .Placeholder("Select Employment Status...")
                    .DataTextField("EmploymentStatusName")
                    .DataValueField("EmploymentStatusId")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetEmploymentStatusDropDown", "ALMByEEOCategoryReport").Data("bindemploymentstatus");
                        });
                    })
                    )*@

                    @(Html.Kendo().DropDownTree()
                    .AutoWidth(true)
                    .Name("employmentstatus")
                    .HtmlAttributes(new { style = "width: 100%" })
                    .CheckAll(true)
                    .AutoClose(false)
                    .AutoBind(false)
                    .DataTextField("EmploymentStatusName")
                    .DataValueField("EmploymentStatusId")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetEmploymentStatusDropDown", "ALMByEEOCategoryReport").Data("bindemploymentstatus");
                        });
                    })
                    .Checkboxes(checkboxes => checkboxes
                        .Name("checkedFiles")
                        .CheckChildren(true)
                    )

                    )
                </div>
            </div>
        </div>



        <div class="col-md-6">
            <div class="row">
                <div class="col-lg-12">PUMA Codes :</div>
                <div class="col-lg-12">
                    @*@(Html.Kendo().MultiSelect()
                    .Name("pumacodes")
                    .AutoClose(false)
                    .AutoBind(false)
                    .Placeholder("Select Puma Codes...")
                    .DataTextField("PUMACodesName")
                    .DataValueField("PUMACodesId")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetPUMACodesDropDown", "ALMByEEOCategoryReport").Data("bindpumacodes");
                        });

                    })

                    )*@
                    @(Html.Kendo().DropDownTree()
                    .AutoWidth(true)
                    .Name("pumacodes")
                    .HtmlAttributes(new { style = "width: 100%" })
                    .CheckAll(true)
                    .AutoClose(false)
                    .AutoBind(false)
                    .DataTextField("PUMACodesName")
                    .DataValueField("PUMACodesId")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetPUMACodesDropDown", "ALMByEEOCategoryReport").Data("bindpumacodes");
                        });

                    })
                    .Checkboxes(checkboxes => checkboxes
                        .Name("checkedFiles")
                       .CheckChildren(true)
                    )

                    )
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="row">
                <div class="col-lg-12">&nbsp;</div>
                <div class="col-lg-12">
                    <input type="button" id="btnSubmit" onclick="BindALMByEEOCategoryReport();" style="width:100%" class="k-primary k-button" value="Search" />
                </div>
            </div>
        </div>

        

    </div>

</div>


<h2 class="main_title_row">ALM By EEO Category Report:</h2>

<div class="render-outer">
    <div id="RenderReport">
    </div>
</div>
<div class="BodyLoader-outer">
    <div class="BodyLoader">
    </div>
</div>

@section css{
    <link href="~/Content/alertifyjs/css/alertify.rtl.css" rel="stylesheet" />
}

@section scripts{
    <script src="~/Scripts/custom.js"></script>
    <script src="~/Content/alertifyjs/alertify.js"></script>
    <script src="~/Content/alertifyjs/alertify.min.js"></script>

    <script>
        $(document).ready(function () {
            $('.formatNumber').each(function (e, elm) {
                $(elm).text(formatNumber($(elm).text()));
            });
            $(".BodyLoader").hide();
            $(".BodyLoader-outer").hide();
            $(".render-outer").height($(".main-content").height() - 280);
        });
        function filterpumacodes() {

            //kendoDropDownTree

            //var dropdownlist = $("#employmentstatus").data("kendoMultiSelect");
            //dropdownlist.value([]);
            //dropdownlist.dataSource.read();

            //var MultiSelect = $("#pumacodes").data("kendoMultiSelect");
            //MultiSelect.value([]);
            //MultiSelect.dataSource.read();

            var dropdownlist = $("#employmentstatus").data("kendoDropDownTree");
            dropdownlist.value([]);
            dropdownlist.dataSource.read();


            var kendoDropDownTree = $("#pumacodes").data("kendoDropDownTree");
            kendoDropDownTree.value([]);
            kendoDropDownTree.dataSource.read();


        }

        function filterpumacodesViaState() {
            var kendoDropDownTree = $("#pumacodes").data("kendoDropDownTree");
            kendoDropDownTree.value([]);
            kendoDropDownTree.dataSource.read();
        }

        function bindpumacodes() {
            return {
                stateid: $("#state").val(),
                uscensusgeographytypesid: $("#uscensusgeographytypes").val()
            };
        }
        function bindemploymentstatus()
        {
            return {
                uscensusgeographytypesid: $("#uscensusgeographytypes").val()
            };
        }
        function ExportALMByEEOCategoryReport() {
            $(".BodyLoader").show();
            $(".BodyLoader-outer").show();
            var uscensusversionid = escape($("#uscensusdataversion").val());
            var searchbyworksite =escape( $("#uscensusgeographytypes").val());
            var occupationcodeid =escape( $("#uscensusoccupations").val());
            var stateid = $("#state").val();
            var puma_codes = JSON.stringify($("#pumacodes").data("kendoDropDownTree").value()).replace(']', '').replace('[', '').replace(/"/g, '');
            var employmentstatus = JSON.stringify($("#employmentstatus").data("kendoDropDownTree").value()).replace(']', '').replace('[', '').replace(/"/g, '');
            location.href = '@Url.Action("ExportToPDF", "ALMByEEOCategoryReport")?uscensusversionid=' + uscensusversionid + '&searchbyworksite=' + searchbyworksite + '&occupationcodeid=' + occupationcodeid + '&stateid=' + stateid + '&puma_codes=' + puma_codes + '&employmentstatus=' + employmentstatus;
            $(".BodyLoader").hide();
            $(".BodyLoader-outer").hide();
        }
        function BindALMByEEOCategoryReport() {

            if ($("#employmentstatus").data("kendoDropDownTree").value().length > 0) {


                $(".BodyLoader").show();
                $(".BodyLoader-outer").show();
                $.ajax({
                    type: "GET",
                    cache: false,
                    url: "/ALMByEEOCategoryReport/GetALMByEEOCategoryReport",
                    data: {
                        uscensusversionid: $("#uscensusdataversion").val(),
                        searchbyworksite: $("#uscensusgeographytypes").val(),
                        occupationcodeid: $("#uscensusoccupations").val(),
                        stateid: $("#state").val(),
                        puma_codes: JSON.stringify($("#pumacodes").data("kendoDropDownTree").value()).replace(']', '').replace('[', '').replace(/"/g, ''),
                        employmentstatus: JSON.stringify($("#employmentstatus").data("kendoDropDownTree").value()).replace(']', '').replace('[', '').replace(/"/g, ''),
                    },
                    success: function (response) {
                        //console.log(response)
                        $("#RenderReport").html(response);
                        $(".BodyLoader").hide();
                        $(".BodyLoader-outer").hide();
                    },
                    error: function (errorResponse) {
                        $(".BodyLoader").hide();
                        $(".BodyLoader-outer").hide();
                        console.log(errorResponse);
                    }
                });
            } else
            {
                alertify.error("Please select at least one Employment Status");
            }
        }

    </script>
}