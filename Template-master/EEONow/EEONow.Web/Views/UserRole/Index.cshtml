@using Kendo.Mvc.UI
@using EEONow.Utilities;
@{
    ViewBag.Title = "User Role List";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    var LoginInfo = AppUtility.DecryptCookie();
}
<link href="~/Content/kendo/kendo.common.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/kendo/kendo.mobile.all.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/kendo/kendo.default.min.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/kendo/jquery.min.js"></script>
<script src="~/Scripts/kendo/jszip.min.js"></script>
<script src="~/Scripts/kendo/kendo.all.min.js"></script>
<script src="~/Scripts/kendo/kendo.aspnetmvc.min.js"></script>
<script src="@Url.Content("~/Scripts/kendo.modernizr.custom.js")"></script>
@*<link href="~/Content/kendo/kendo.material.min.css" rel="stylesheet" />*@
<style>
    .k-button.k-button-icontext .k-icon {
        vertical-align: middle !important;
        margin: 0 3px 0 0 !important;
    }

    .k-edit-form-container {
        width: auto;
    }
</style>
<h2 class="main_title_row">User Role List</h2>

@(Html.Kendo().Grid<EEONow.Models.UserRoleModel>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.Name).Width(200).Filterable(filterable => filterable.Cell(e => e.Operator("contains").SuggestionOperator(FilterType.Contains).ShowOperators(false)));
        columns.Bound(p => p.Description).Filterable(false);
        columns.ForeignKey(p => p.OrganizationId, (System.Collections.IEnumerable)ViewBag.OrganisationList, "Value", "Text").Title("Organization").Filterable(filterable => filterable.Multi(true).Cell(e => e.ShowOperators(false))).Width(200);
        columns.Bound(p => p.Active).Width(120).Filterable(false);
        columns.Bound(p => p.IsFilter).Width(120).Filterable(false);
        columns.Bound(p => p.IsAdd).Width(120).Filterable(false);
        columns.Bound(p => p.IsEdit).Width(120).Filterable(false);

        columns.Command(command => { command.Edit().Text((LoginInfo.IsEdit==true?"Edit":"View")); }).Width(100);
    })
    .ToolBar(toolbar => toolbar.Create())
    .Editable(editable => editable.Mode(GridEditMode.PopUp).Window(w => w.Title("Edit Role").Width(500))).Events(e => e.Edit("onPopOpen"))
    .Pageable()
    .Sortable()
    .Scrollable()
    .Filterable(ftb => ftb
    .Mode(GridFilterMode.Row)
    .Extra(false)
    )
    .HtmlAttributes(new { style = "height:550px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
       .Events(events =>
       {
           //events.Error("error_handler");
           events.RequestStart("onRequestEnd");
       })
        .Model(model => model.Id(p => p.RoleId))
        .Create(update => update.Action("CreateUserRole", "UserRole"))
        .Read(read => read.Action("BindUserRoleModel", "UserRole"))
        .Update(update => update.Action("UpdateUserRole", "UserRole"))
    //.Destroy(update => update.Action("Destroy", "Home"))
    )
)

@section css{
    <link href="~/Content/Custom/login.css" rel="stylesheet" />
    <link href="~/Content/alertifyjs/css/alertify.rtl.css" rel="stylesheet" />
}
@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Content/alertifyjs/alertify.js"></script>
    <script src="~/Content/alertifyjs/alertify.min.js"></script>
    <script type="text/javascript">
        //function error_handler(e) {
        //    if (e.errors) {

        //        var grid = $("#grid").data("kendoGrid");
        //        grid.cancelChanges();

        //        var message = "Errors:\n";
        //        $.each(e.errors, function (key, value) {
        //            if ('errors' in value) {
        //                $.each(value.errors, function () {
        //                    message += this + "\n";
        //                });
        //            }
        //        });
        //        alert(message);
        //    }
        //}
        function onRequestEnd(e, status) {

            if (e.errors) {
                var grid = $("#grid").data("kendoGrid");
                grid.cancelChanges();
                var message = "";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alertify.error(message);
            }
            //Check request type
            if (e.type == "create" && !e.errors) {
                alertify.success("Create record is successfull");
            }
            if (e.type == "update" && !e.errors) {
                alertify.success("Update record is successfull");
            }
        }
        function onPopOpen(e) {
            if (e.model.id == 0) {
                $(".k-window-title").html('Add Role');
                $(".k-grid-update").html('<span class="k-icon k-i-check"></span>Save');
            }else
            {
             if ('@LoginInfo.IsEdit.ToString()' == "True")
             {
                 $(".k-edit-form-container .k-edit-buttons").show();
             }
             else {
                 $(".k-edit-form-container .k-edit-buttons").hide();
                 $(".k-edit-form-container .k-edit-buttons").html(''); $(".k-window-title").html("View Detail");
             }
            }
            //$(".k-widget.k-window .k-edit-buttons").hide();
            //$(".k-window-title").html('View Role');
        }
    </script>

}