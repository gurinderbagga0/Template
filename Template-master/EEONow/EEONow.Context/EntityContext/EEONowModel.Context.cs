//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EEONow.Context.EntityContext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EEONowEntity : DbContext
    {
        public EEONowEntity()
            : base("name=EEONowEntity")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AgencyYearsOfService> AgencyYearsOfServices { get; set; }
        public virtual DbSet<AgeRange> AgeRanges { get; set; }
        public virtual DbSet<AssignMenuHeader> AssignMenuHeaders { get; set; }
        public virtual DbSet<AssignRole> AssignRoles { get; set; }
        public virtual DbSet<AvailableLaborMarketData> AvailableLaborMarketDatas { get; set; }
        public virtual DbSet<AvailableLaborMarketFileVersion> AvailableLaborMarketFileVersions { get; set; }
        public virtual DbSet<County> Counties { get; set; }
        public virtual DbSet<DefaultLabelField> DefaultLabelFields { get; set; }
        public virtual DbSet<EEOJobCategory> EEOJobCategories { get; set; }
        public virtual DbSet<EmployeeLevel> EmployeeLevels { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<FileSubmissionError> FileSubmissionErrors { get; set; }
        public virtual DbSet<FileSubmissionRecord> FileSubmissionRecords { get; set; }
        public virtual DbSet<FileSubmission> FileSubmissions { get; set; }
        public virtual DbSet<FileSubmissionStatu> FileSubmissionStatus { get; set; }
        public virtual DbSet<Gender> Genders { get; set; }
        public virtual DbSet<GenerateCSV> GenerateCSVs { get; set; }
        public virtual DbSet<GraphOrganizationMaster> GraphOrganizationMasters { get; set; }
        public virtual DbSet<GraphOrganizationView> GraphOrganizationViews { get; set; }
        public virtual DbSet<LastPerformanceRating> LastPerformanceRatings { get; set; }
        public virtual DbSet<MenuHeaderConfiguration> MenuHeaderConfigurations { get; set; }
        public virtual DbSet<Organization> Organizations { get; set; }
        public virtual DbSet<PositionYearsOfService> PositionYearsOfServices { get; set; }
        public virtual DbSet<Race> Races { get; set; }
        public virtual DbSet<SalaryRange> SalaryRanges { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<USCensus_ALLData> USCensus_ALLData { get; set; }
        public virtual DbSet<USCensus_BoardingOccupationGroups> USCensus_BoardingOccupationGroups { get; set; }
        public virtual DbSet<USCensus_DataVersion> USCensus_DataVersion { get; set; }
        public virtual DbSet<USCensus_EEO_OccupationCodes> USCensus_EEO_OccupationCodes { get; set; }
        public virtual DbSet<USCensus_EEOJobClasificationCategories> USCensus_EEOJobClasificationCategories { get; set; }
        public virtual DbSet<USCensus_EmployeeStatusRecode> USCensus_EmployeeStatusRecode { get; set; }
        public virtual DbSet<USCensus_GeographyTypes> USCensus_GeographyTypes { get; set; }
        public virtual DbSet<USCensus_MajorOccupationGroups> USCensus_MajorOccupationGroups { get; set; }
        public virtual DbSet<USCensus_MinorOccupationGroups> USCensus_MinorOccupationGroups { get; set; }
        public virtual DbSet<USCensus_Occupations> USCensus_Occupations { get; set; }
        public virtual DbSet<USCensus_Occupations_EEOJobClasificationCategories> USCensus_Occupations_EEOJobClasificationCategories { get; set; }
        public virtual DbSet<USCensus_PUMAResidenceCodes> USCensus_PUMAResidenceCodes { get; set; }
        public virtual DbSet<USCensus_PUMAWorksiteCodes> USCensus_PUMAWorksiteCodes { get; set; }
        public virtual DbSet<VacancyRange> VacancyRanges { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<MenuConfiguration> MenuConfigurations { get; set; }
        public virtual DbSet<AssignedGraphOrganizationView> AssignedGraphOrganizationViews { get; set; }
        public virtual DbSet<OrganizationLabelField> OrganizationLabelFields { get; set; }
        public virtual DbSet<DefaultEmployeeField> DefaultEmployeeFields { get; set; }
        public virtual DbSet<EmployeeActiveField> EmployeeActiveFields { get; set; }
        public virtual DbSet<PublicURL> PublicURLs { get; set; }
        public virtual DbSet<EmailAuthenticateLog> EmailAuthenticateLogs { get; set; }
        public virtual DbSet<LoginDeviceInfo> LoginDeviceInfoes { get; set; }
    
        public virtual int Sp_InsertEmployeeLevel(Nullable<int> fileSubmissionId, Nullable<int> organizationId)
        {
            var fileSubmissionIdParameter = fileSubmissionId.HasValue ?
                new ObjectParameter("FileSubmissionId", fileSubmissionId) :
                new ObjectParameter("FileSubmissionId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsertEmployeeLevel", fileSubmissionIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<rptEEO_GenderAndRace_CompensationReport_Result> rptEEO_GenderAndRace_CompensationReport(Nullable<int> organizationID, Nullable<int> fileSubmissionID, Nullable<int> eeoJobCategoryId, string programOfficeName, string positionTitle, string regionName)
        {
            var organizationIDParameter = organizationID.HasValue ?
                new ObjectParameter("organizationID", organizationID) :
                new ObjectParameter("organizationID", typeof(int));
    
            var fileSubmissionIDParameter = fileSubmissionID.HasValue ?
                new ObjectParameter("fileSubmissionID", fileSubmissionID) :
                new ObjectParameter("fileSubmissionID", typeof(int));
    
            var eeoJobCategoryIdParameter = eeoJobCategoryId.HasValue ?
                new ObjectParameter("eeoJobCategoryId", eeoJobCategoryId) :
                new ObjectParameter("eeoJobCategoryId", typeof(int));
    
            var programOfficeNameParameter = programOfficeName != null ?
                new ObjectParameter("programOfficeName", programOfficeName) :
                new ObjectParameter("programOfficeName", typeof(string));
    
            var positionTitleParameter = positionTitle != null ?
                new ObjectParameter("positionTitle", positionTitle) :
                new ObjectParameter("positionTitle", typeof(string));
    
            var regionNameParameter = regionName != null ?
                new ObjectParameter("regionName", regionName) :
                new ObjectParameter("regionName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rptEEO_GenderAndRace_CompensationReport_Result>("rptEEO_GenderAndRace_CompensationReport", organizationIDParameter, fileSubmissionIDParameter, eeoJobCategoryIdParameter, programOfficeNameParameter, positionTitleParameter, regionNameParameter);
        }
    
        public virtual ObjectResult<rptEEOGenderCompensationReport_Result> rptEEOGenderCompensationReport(Nullable<int> organizationID, Nullable<int> fileSubmissionID, Nullable<int> eeoJobCategoryId, string programOfficeName, string positionTitle, string regionName)
        {
            var organizationIDParameter = organizationID.HasValue ?
                new ObjectParameter("organizationID", organizationID) :
                new ObjectParameter("organizationID", typeof(int));
    
            var fileSubmissionIDParameter = fileSubmissionID.HasValue ?
                new ObjectParameter("fileSubmissionID", fileSubmissionID) :
                new ObjectParameter("fileSubmissionID", typeof(int));
    
            var eeoJobCategoryIdParameter = eeoJobCategoryId.HasValue ?
                new ObjectParameter("eeoJobCategoryId", eeoJobCategoryId) :
                new ObjectParameter("eeoJobCategoryId", typeof(int));
    
            var programOfficeNameParameter = programOfficeName != null ?
                new ObjectParameter("programOfficeName", programOfficeName) :
                new ObjectParameter("programOfficeName", typeof(string));
    
            var positionTitleParameter = positionTitle != null ?
                new ObjectParameter("positionTitle", positionTitle) :
                new ObjectParameter("positionTitle", typeof(string));
    
            var regionNameParameter = regionName != null ?
                new ObjectParameter("regionName", regionName) :
                new ObjectParameter("regionName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rptEEOGenderCompensationReport_Result>("rptEEOGenderCompensationReport", organizationIDParameter, fileSubmissionIDParameter, eeoJobCategoryIdParameter, programOfficeNameParameter, positionTitleParameter, regionNameParameter);
        }
    
        public virtual int CreateEEORatingMetrics(Nullable<int> fileSubmissionID, Nullable<int> organizationID)
        {
            var fileSubmissionIDParameter = fileSubmissionID.HasValue ?
                new ObjectParameter("fileSubmissionID", fileSubmissionID) :
                new ObjectParameter("fileSubmissionID", typeof(int));
    
            var organizationIDParameter = organizationID.HasValue ?
                new ObjectParameter("organizationID", organizationID) :
                new ObjectParameter("organizationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateEEORatingMetrics", fileSubmissionIDParameter, organizationIDParameter);
        }
    
        public virtual ObjectResult<getCSVGraphData_UniquePosition_Result> getCSVGraphData_UniquePosition(Nullable<int> fileSubmissionID, Nullable<int> organizationID)
        {
            var fileSubmissionIDParameter = fileSubmissionID.HasValue ?
                new ObjectParameter("fileSubmissionID", fileSubmissionID) :
                new ObjectParameter("fileSubmissionID", typeof(int));
    
            var organizationIDParameter = organizationID.HasValue ?
                new ObjectParameter("organizationID", organizationID) :
                new ObjectParameter("organizationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCSVGraphData_UniquePosition_Result>("getCSVGraphData_UniquePosition", fileSubmissionIDParameter, organizationIDParameter);
        }
    
        public virtual ObjectResult<getCSVGraphData_Result> getCSVGraphData(Nullable<int> fileSubmissionID, Nullable<int> organizationID)
        {
            var fileSubmissionIDParameter = fileSubmissionID.HasValue ?
                new ObjectParameter("fileSubmissionID", fileSubmissionID) :
                new ObjectParameter("fileSubmissionID", typeof(int));
    
            var organizationIDParameter = organizationID.HasValue ?
                new ObjectParameter("organizationID", organizationID) :
                new ObjectParameter("organizationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCSVGraphData_Result>("getCSVGraphData", fileSubmissionIDParameter, organizationIDParameter);
        }
    
        public virtual ObjectResult<rptEEOIndexReport_Result> rptEEOIndexReport(Nullable<int> organizationID, Nullable<int> fileSubmissionID, string positionNumber)
        {
            var organizationIDParameter = organizationID.HasValue ?
                new ObjectParameter("organizationID", organizationID) :
                new ObjectParameter("organizationID", typeof(int));
    
            var fileSubmissionIDParameter = fileSubmissionID.HasValue ?
                new ObjectParameter("fileSubmissionID", fileSubmissionID) :
                new ObjectParameter("fileSubmissionID", typeof(int));
    
            var positionNumberParameter = positionNumber != null ?
                new ObjectParameter("positionNumber", positionNumber) :
                new ObjectParameter("positionNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rptEEOIndexReport_Result>("rptEEOIndexReport", organizationIDParameter, fileSubmissionIDParameter, positionNumberParameter);
        }
    
        public virtual ObjectResult<rptStaffLevelsReport_Result> rptStaffLevelsReport(Nullable<int> organizationID, Nullable<int> fileSubmissionID, Nullable<int> eeoJobCategoryId, string programOfficeName, string regionName)
        {
            var organizationIDParameter = organizationID.HasValue ?
                new ObjectParameter("organizationID", organizationID) :
                new ObjectParameter("organizationID", typeof(int));
    
            var fileSubmissionIDParameter = fileSubmissionID.HasValue ?
                new ObjectParameter("fileSubmissionID", fileSubmissionID) :
                new ObjectParameter("fileSubmissionID", typeof(int));
    
            var eeoJobCategoryIdParameter = eeoJobCategoryId.HasValue ?
                new ObjectParameter("eeoJobCategoryId", eeoJobCategoryId) :
                new ObjectParameter("eeoJobCategoryId", typeof(int));
    
            var programOfficeNameParameter = programOfficeName != null ?
                new ObjectParameter("programOfficeName", programOfficeName) :
                new ObjectParameter("programOfficeName", typeof(string));
    
            var regionNameParameter = regionName != null ?
                new ObjectParameter("regionName", regionName) :
                new ObjectParameter("regionName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rptStaffLevelsReport_Result>("rptStaffLevelsReport", organizationIDParameter, fileSubmissionIDParameter, eeoJobCategoryIdParameter, programOfficeNameParameter, regionNameParameter);
        }
    
        public virtual ObjectResult<rptJobTitlesByEEOCategory_Result> rptJobTitlesByEEOCategory(Nullable<int> organizationID, Nullable<int> fileSubmissionID, Nullable<int> eeoJobCategoryId, string programOfficeName, string regionName)
        {
            var organizationIDParameter = organizationID.HasValue ?
                new ObjectParameter("organizationID", organizationID) :
                new ObjectParameter("organizationID", typeof(int));
    
            var fileSubmissionIDParameter = fileSubmissionID.HasValue ?
                new ObjectParameter("fileSubmissionID", fileSubmissionID) :
                new ObjectParameter("fileSubmissionID", typeof(int));
    
            var eeoJobCategoryIdParameter = eeoJobCategoryId.HasValue ?
                new ObjectParameter("eeoJobCategoryId", eeoJobCategoryId) :
                new ObjectParameter("eeoJobCategoryId", typeof(int));
    
            var programOfficeNameParameter = programOfficeName != null ?
                new ObjectParameter("programOfficeName", programOfficeName) :
                new ObjectParameter("programOfficeName", typeof(string));
    
            var regionNameParameter = regionName != null ?
                new ObjectParameter("regionName", regionName) :
                new ObjectParameter("regionName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rptJobTitlesByEEOCategory_Result>("rptJobTitlesByEEOCategory", organizationIDParameter, fileSubmissionIDParameter, eeoJobCategoryIdParameter, programOfficeNameParameter, regionNameParameter);
        }
    
        public virtual ObjectResult<rptGetALM_ByEEOCategoryReport_Result> rptGetALM_ByEEOCategoryReport(Nullable<int> uSCensusVersionID, Nullable<bool> searchByWorkSite, Nullable<int> occupationCodeID, string puma_codes, string eSRCodes, Nullable<int> stateID)
        {
            var uSCensusVersionIDParameter = uSCensusVersionID.HasValue ?
                new ObjectParameter("USCensusVersionID", uSCensusVersionID) :
                new ObjectParameter("USCensusVersionID", typeof(int));
    
            var searchByWorkSiteParameter = searchByWorkSite.HasValue ?
                new ObjectParameter("searchByWorkSite", searchByWorkSite) :
                new ObjectParameter("searchByWorkSite", typeof(bool));
    
            var occupationCodeIDParameter = occupationCodeID.HasValue ?
                new ObjectParameter("occupationCodeID", occupationCodeID) :
                new ObjectParameter("occupationCodeID", typeof(int));
    
            var puma_codesParameter = puma_codes != null ?
                new ObjectParameter("puma_codes", puma_codes) :
                new ObjectParameter("puma_codes", typeof(string));
    
            var eSRCodesParameter = eSRCodes != null ?
                new ObjectParameter("ESRCodes", eSRCodes) :
                new ObjectParameter("ESRCodes", typeof(string));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("stateID", stateID) :
                new ObjectParameter("stateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rptGetALM_ByEEOCategoryReport_Result>("rptGetALM_ByEEOCategoryReport", uSCensusVersionIDParameter, searchByWorkSiteParameter, occupationCodeIDParameter, puma_codesParameter, eSRCodesParameter, stateIDParameter);
        }
    
        public virtual ObjectResult<rptGetALM_ByFederalJobCodes_Result> rptGetALM_ByFederalJobCodes(Nullable<int> uSCensusVersionID, Nullable<int> stateID, Nullable<int> eEOOccupationCodeID, Nullable<int> eEOJobClasificationCategoryID, Nullable<bool> searchByWorkSite, string eSRCodes, string pUMA_CODES, Nullable<int> majorOccupationGroup, Nullable<int> minorOccupationGroupID, Nullable<int> boardingOccupationGroupID, string occupationIDs)
        {
            var uSCensusVersionIDParameter = uSCensusVersionID.HasValue ?
                new ObjectParameter("USCensusVersionID", uSCensusVersionID) :
                new ObjectParameter("USCensusVersionID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("stateID", stateID) :
                new ObjectParameter("stateID", typeof(int));
    
            var eEOOccupationCodeIDParameter = eEOOccupationCodeID.HasValue ?
                new ObjectParameter("EEOOccupationCodeID", eEOOccupationCodeID) :
                new ObjectParameter("EEOOccupationCodeID", typeof(int));
    
            var eEOJobClasificationCategoryIDParameter = eEOJobClasificationCategoryID.HasValue ?
                new ObjectParameter("EEOJobClasificationCategoryID", eEOJobClasificationCategoryID) :
                new ObjectParameter("EEOJobClasificationCategoryID", typeof(int));
    
            var searchByWorkSiteParameter = searchByWorkSite.HasValue ?
                new ObjectParameter("SearchByWorkSite", searchByWorkSite) :
                new ObjectParameter("SearchByWorkSite", typeof(bool));
    
            var eSRCodesParameter = eSRCodes != null ?
                new ObjectParameter("ESRCodes", eSRCodes) :
                new ObjectParameter("ESRCodes", typeof(string));
    
            var pUMA_CODESParameter = pUMA_CODES != null ?
                new ObjectParameter("PUMA_CODES", pUMA_CODES) :
                new ObjectParameter("PUMA_CODES", typeof(string));
    
            var majorOccupationGroupParameter = majorOccupationGroup.HasValue ?
                new ObjectParameter("MajorOccupationGroup", majorOccupationGroup) :
                new ObjectParameter("MajorOccupationGroup", typeof(int));
    
            var minorOccupationGroupIDParameter = minorOccupationGroupID.HasValue ?
                new ObjectParameter("MinorOccupationGroupID", minorOccupationGroupID) :
                new ObjectParameter("MinorOccupationGroupID", typeof(int));
    
            var boardingOccupationGroupIDParameter = boardingOccupationGroupID.HasValue ?
                new ObjectParameter("BoardingOccupationGroupID", boardingOccupationGroupID) :
                new ObjectParameter("BoardingOccupationGroupID", typeof(int));
    
            var occupationIDsParameter = occupationIDs != null ?
                new ObjectParameter("OccupationIDs", occupationIDs) :
                new ObjectParameter("OccupationIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rptGetALM_ByFederalJobCodes_Result>("rptGetALM_ByFederalJobCodes", uSCensusVersionIDParameter, stateIDParameter, eEOOccupationCodeIDParameter, eEOJobClasificationCategoryIDParameter, searchByWorkSiteParameter, eSRCodesParameter, pUMA_CODESParameter, majorOccupationGroupParameter, minorOccupationGroupIDParameter, boardingOccupationGroupIDParameter, occupationIDsParameter);
        }
    }
}
